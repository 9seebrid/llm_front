name: CICD

on:
  push:
    branches:
      - main # main 브랜치에 푸시할 때 CI/CD 실행

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Source Code
        uses: actions/checkout@v4 # 소스 코드를 체크아웃

      - name: Sign in to Docker Hub
        run: echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin # Docker Hub에 로그인

      - name: Build Docker Image
        run: docker build -t koobonse/llm-front:latest -t koobonse/llm-front:${{ github.sha }} . # Docker 이미지 빌드 및 태그 설정

      - name: Push Docker Image
        run: |
          docker push koobonse/llm-front:latest  # latest 태그 푸시
          docker push koobonse/llm-front:${{ github.sha }}  # 커밋 해시를 태그로 푸시

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Sign in to Docker Hub
        run: echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin # 배포 서버에서 Docker Hub에 로그인

      - name: Delete Docker Image Cache
        run: docker system prune -a -f # Docker 캐시 삭제

      - name: Pull image from Docker Hub
        run: docker pull koobonse/llm-front:latest # 최신 이미지 가져오기

      - name: Delete existing container
        run: docker rm -f reactContainer || true # 기존 컨테이너 삭제 (없을 경우 무시)

      - name: Run container
        run: docker run -d -p 3001:80 --name reactContainer koobonse/llm-front:latest # 새로운 컨테이너 실행
